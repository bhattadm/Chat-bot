{"ast":null,"code":"import _slicedToArray from\"C:/Users/kusha/Desktop/student--bhattadm/work/react-chat/react-chat-server/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import'./App.css';import{useState,useEffect}from'react';import{checkSession}from'./services';import Login from'./Login';import ChatUserList from'./ChatUserList';import ChatMessageList from'./ChatMessageList';function App(){var _useState=useState({isLoggedIn:false,isPending:true}),_useState2=_slicedToArray(_useState,2),userState=_useState2[0],setUserState=_useState2[1];useEffect(function(){checkSession().then(function(userinfo){setUserState({isLoggedIn:true,isPending:false,username:userinfo.username,userList:userinfo.userList,messageList:userinfo.messageList});}).catch(function(){// We treat any failure as not logged in\nsetUserState({isLoggedIn:false,isPending:false});});},[]);// only run on initial render\nvar login=function login(_ref){var username=_ref.username,userList=_ref.userList,messageList=_ref.messageList;setUserState({isLoggedIn:true,isPending:false,username:username,userList:userList,messageList:messageList});};if(userState.isPending){return/*#__PURE__*/_jsx(\"div\",{className:\"app\",children:\"Loading...\"});}var content;if(userState.isLoggedIn){//  content = <ShowStuff stuff={userState.info}/>;\n/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(ChatUserList,{userList:userState.userList}),/*#__PURE__*/_jsx(ChatMessageList,{messageList:userState.messageList})]});}else{content=/*#__PURE__*/_jsx(Login,{onLogin:login});}return/*#__PURE__*/_jsx(\"div\",{className:\"app\",children:content});}export default App;","map":{"version":3,"sources":["C:/Users/kusha/Desktop/student--bhattadm/work/react-chat/react-chat-server/src/App.jsx"],"names":["useState","useEffect","checkSession","Login","ChatUserList","ChatMessageList","App","isLoggedIn","isPending","userState","setUserState","then","userinfo","username","userList","messageList","catch","login","content"],"mappings":"yRACA,MAAO,WAAP,CACA,OAASA,QAAT,CAAmBC,SAAnB,KAAoC,OAApC,CACA,OAASC,YAAT,KAA6B,YAA7B,CACA,MAAOC,CAAAA,KAAP,KAAkB,SAAlB,CACA,MAAOC,CAAAA,YAAP,KAAyB,gBAAzB,CACA,MAAOC,CAAAA,eAAP,KAA4B,mBAA5B,CACA,QAASC,CAAAA,GAAT,EAAe,eACoBN,QAAQ,CAAC,CAAEO,UAAU,CAAE,KAAd,CAAqBC,SAAS,CAAE,IAAhC,CAAD,CAD5B,wCACNC,SADM,eACIC,YADJ,eAEbT,SAAS,CAAE,UAAM,CACfC,YAAY,GACXS,IADD,CACO,SAAAC,QAAQ,CAAI,CACjBF,YAAY,CAAC,CACXH,UAAU,CAAE,IADD,CAEXC,SAAS,CAAE,KAFA,CAGXK,QAAQ,CAAED,QAAQ,CAACC,QAHR,CAIXC,QAAQ,CAACF,QAAQ,CAACE,QAJP,CAKXC,WAAW,CAAEH,QAAQ,CAACG,WALX,CAAD,CAAZ,CAOD,CATD,EAUCC,KAVD,CAUQ,UAAM,CACZ;AACAN,YAAY,CAAC,CACXH,UAAU,CAAE,KADD,CAEXC,SAAS,CAAE,KAFA,CAAD,CAAZ,CAID,CAhBD,EAiBD,CAlBQ,CAkBN,EAlBM,CAAT,CAkBQ;AAER,GAAMS,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,MAA2C,IAAjCJ,CAAAA,QAAiC,MAAjCA,QAAiC,CAAvBC,QAAuB,MAAvBA,QAAuB,CAAdC,WAAc,MAAdA,WAAc,CACvDL,YAAY,CAAC,CACXH,UAAU,CAAE,IADD,CAEXC,SAAS,CAAE,KAFA,CAGXK,QAAQ,CAARA,QAHW,CAIXC,QAAQ,CAARA,QAJW,CAKXC,WAAW,CAAXA,WALW,CAAD,CAAZ,CAOD,CARD,CAUA,GAAGN,SAAS,CAACD,SAAb,CAAwB,CACtB,mBACE,YAAK,SAAS,CAAC,KAAf,wBADF,CAKD,CAED,GAAIU,CAAAA,OAAJ,CACA,GAAGT,SAAS,CAACF,UAAb,CAAyB,CACvB;AACA,iDACE,KAAC,YAAD,EAAkB,QAAQ,CAAIE,SAAS,CAACK,QAAxC,EADF,cAEE,KAAC,eAAD,EAAkB,WAAW,CAAIL,SAAS,CAACM,WAA3C,EAFF,IAKD,CAPD,IAOO,CACLG,OAAO,cAAG,KAAC,KAAD,EAAO,OAAO,CAAED,KAAhB,EAAV,CACD,CACD,mBACE,YAAK,SAAS,CAAC,KAAf,UACEC,OADF,EADF,CAKD,CAED,cAAeZ,CAAAA,GAAf","sourcesContent":["\nimport './App.css';\nimport { useState, useEffect } from 'react';\nimport { checkSession } from './services';\nimport Login from './Login';\nimport ChatUserList from './ChatUserList';\nimport ChatMessageList from './ChatMessageList';\nfunction App() {\n  const [userState,setUserState] = useState({ isLoggedIn: false, isPending: true });\n  useEffect( () => {\n    checkSession()\n    .then( userinfo => {\n      setUserState({\n        isLoggedIn: true,\n        isPending: false,\n        username: userinfo.username,\n        userList:userinfo.userList,\n        messageList: userinfo.messageList,\n      });\n    })\n    .catch( () => {\n      // We treat any failure as not logged in\n      setUserState({\n        isLoggedIn: false,\n        isPending: false,\n      });\n    });\n  }, []); // only run on initial render\n\n  const login = function({username, userList,messageList}) {\n    setUserState({\n      isLoggedIn: true,\n      isPending: false,\n      username,\n      userList,\n      messageList\n    });\n  };\n\n  if(userState.isPending) {\n    return (\n      <div className=\"app\">\n        Loading...\n      </div>\n    );\n  }\n\n  let content;\n  if(userState.isLoggedIn) {\n    //  content = <ShowStuff stuff={userState.info}/>;\n    <div>\n      <ChatUserList     userList = {userState.userList}/>\n      <ChatMessageList  messageList = {userState.messageList}/>\n      {/* <ChatOutgoing /> */}\n    </div>\n  } else {\n    content = <Login onLogin={login}/>;\n  }\n  return (\n    <div className=\"app\">\n     {content}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}