{"ast":null,"code":"import _slicedToArray from\"C:/Users/kusha/Desktop/student--bhattadm/work/react-chat/react-chat-server/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{useState}from'react';import{sendMessage}from'./services';var ChatOutgoing=function ChatOutgoing(_ref){var username=_ref.username,onSend=_ref.onSend;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),text=_useState2[0],setText=_useState2[1];var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),isGreyedout=_useState4[0],setisGreyedout=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),isLoading=_useState6[0],setisLoading=_useState6[1];var _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),statusmsg=_useState8[0],setstatusmsg=_useState8[1];var onChange=function onChange(e){setstatusmsg('');setText(e.target.value);setisGreyedout(!e.target.value);};var sendmessage=function sendmessage(){setisLoading(true);sendMessage({username:username,text:text}).then(function(userinfo){onSend({username:username,userList:userinfo.userList,messageList:userinfo.messageList});console.log(\"&&&&&&\");console.log(userinfo.messageList);setText('');setstatusmsg('');setisLoading(false);}).catch(function(err){setText('');setstatusmsg(err.error);setisLoading(false);});};return/*#__PURE__*/_jsxs(\"div\",{children:[statusmsg&&/*#__PURE__*/_jsx(\"div\",{class:\"status\",children:statusmsg}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Send Message:\",/*#__PURE__*/_jsx(\"input\",{disabled:isLoading,onChange:onChange,value:text})]}),/*#__PURE__*/_jsx(\"button\",{onClick:sendmessage,disabled:isGreyedout||isLoading,children:isLoading?\"...\":\"Send\"})]});};export default ChatOutgoing;","map":{"version":3,"sources":["C:/Users/kusha/Desktop/student--bhattadm/work/react-chat/react-chat-server/src/ChatOutgoing.jsx"],"names":["useState","sendMessage","ChatOutgoing","username","onSend","text","setText","isGreyedout","setisGreyedout","isLoading","setisLoading","statusmsg","setstatusmsg","onChange","e","target","value","sendmessage","then","userinfo","userList","messageList","console","log","catch","err","error"],"mappings":"yRAAA,OAASA,QAAT,KAAyB,OAAzB,CACA,OAASC,WAAT,KAA2B,YAA3B,CAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,MAAwB,IAAtBC,CAAAA,QAAsB,MAAtBA,QAAsB,CAAbC,MAAa,MAAbA,MAAa,eAEnBJ,QAAQ,CAAC,EAAD,CAFW,wCAEpCK,IAFoC,eAE9BC,OAF8B,8BAGLN,QAAQ,CAAC,IAAD,CAHH,yCAGpCO,WAHoC,eAGvBC,cAHuB,8BAITR,QAAQ,CAAC,KAAD,CAJC,yCAIpCS,SAJoC,eAIzBC,YAJyB,8BAKTV,QAAQ,CAAC,EAAD,CALC,yCAKpCW,SALoC,eAKzBC,YALyB,eAO3C,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,CAAD,CAAO,CACpBF,YAAY,CAAC,EAAD,CAAZ,CACAN,OAAO,CAACQ,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP,CACAR,cAAc,CAAC,CAACM,CAAC,CAACC,MAAF,CAASC,KAAX,CAAd,CACD,CAJH,CAMA,GAAMC,CAAAA,WAAW,CAAE,QAAbA,CAAAA,WAAa,EAAI,CACrBP,YAAY,CAAC,IAAD,CAAZ,CACAT,WAAW,CAAC,CAAEE,QAAQ,CAARA,QAAF,CAAYE,IAAI,CAAJA,IAAZ,CAAD,CAAX,CACCa,IADD,CACO,SAAAC,QAAQ,CAAI,CACjBf,MAAM,CAAC,CAAED,QAAQ,CAARA,QAAF,CAAYiB,QAAQ,CAAED,QAAQ,CAACC,QAA/B,CAAyCC,WAAW,CAACF,QAAQ,CAACE,WAA9D,CAAD,CAAN,CACAC,OAAO,CAACC,GAAR,CAAY,QAAZ,EACAD,OAAO,CAACC,GAAR,CAAYJ,QAAQ,CAACE,WAArB,EACAf,OAAO,CAAC,EAAD,CAAP,CACAM,YAAY,CAAC,EAAD,CAAZ,CACAF,YAAY,CAAC,KAAD,CAAZ,CACD,CARD,EASCc,KATD,CASQ,SAAAC,GAAG,CAAI,CACXnB,OAAO,CAAC,EAAD,CAAP,CACAM,YAAY,CAACa,GAAG,CAACC,KAAL,CAAZ,CACAhB,YAAY,CAAC,KAAD,CAAZ,CACH,CAbD,EAcD,CAhBD,CAkBE,mBACI,uBACEC,SAAS,eAAI,YAAK,KAAK,CAAC,QAAX,UAAqBA,SAArB,EADf,cAEA,sDAEE,cAAO,QAAQ,CAAEF,SAAjB,CAA4B,QAAQ,CAAEI,QAAtC,CAAgD,KAAK,CAAER,IAAvD,EAFF,GAFA,cAMA,eAAQ,OAAO,CAAEY,WAAjB,CAA8B,QAAQ,CAAEV,WAAW,EAAIE,SAAvD,UAAqEA,SAAS,CAAG,KAAH,CAAW,MAAzF,EANA,GADJ,CAUD,CAzCH,CA2CE,cAAeP,CAAAA,YAAf","sourcesContent":["import { useState } from 'react';\r\nimport { sendMessage} from './services';\r\n\r\nconst ChatOutgoing = ({username,onSend }) => {\r\n  \r\n  const [text, setText] = useState('');\r\n  const [isGreyedout, setisGreyedout] = useState(true);\r\n  const [isLoading, setisLoading] = useState(false);\r\n  const [statusmsg, setstatusmsg] = useState('');\r\n\r\n  const onChange = (e) => {\r\n      setstatusmsg('');\r\n      setText(e.target.value);\r\n      setisGreyedout(!e.target.value);\r\n    };\r\n    \r\n  const sendmessage= ()=>{\r\n    setisLoading(true);\r\n    sendMessage({ username ,text})\r\n    .then( userinfo => {\r\n      onSend({ username, userList: userinfo.userList, messageList:userinfo.messageList });\r\n      console.log(\"&&&&&&\");\r\n      console.log(userinfo.messageList );\r\n      setText('');\r\n      setstatusmsg('');\r\n      setisLoading(false);\r\n    })\r\n    .catch( err => {\r\n        setText('');\r\n        setstatusmsg(err.error);\r\n        setisLoading(false);\r\n    });\r\n  };\r\n\r\n    return (\r\n        <div>\r\n        { statusmsg && <div class=\"status\">{statusmsg}</div>}\r\n        <label>\r\n          Send Message:\r\n          <input disabled={isLoading} onChange={onChange} value={text} />\r\n        </label>\r\n        <button onClick={sendmessage} disabled={isGreyedout || isLoading} >{ isLoading ? \"...\" : \"Send\"}</button>\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  export default ChatOutgoing;"]},"metadata":{},"sourceType":"module"}