{"ast":null,"code":"import _slicedToArray from\"C:/Users/kusha/Desktop/student--bhattadm/work/react-chat/react-chat-server/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import{useEffect,useState}from'react';import{fetchEndSession,fetchCheckSession,fetchGetChat,fetchSendMessage}from'./services';import ChatUserList from'./ChatUserList';import ChatMessageList from'./ChatMessageList';import ChatOutgoing from'./ChatOutgoing';var ShowStuff=function ShowStuff(_ref){var username=_ref.username;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),userList=_useState2[0],setUserList=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),messageList=_useState4[0],setMessageList=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),status=_useState6[0],setStatus=_useState6[1];useEffect(function(){renderChat({setMessageList:setMessageList});var intervalId=setInterval(function(){renderChat({setMessageList:setMessageList});},5000);return function cleanup(){clearInterval(intervalId);};},[]);var renderChat=function renderChat(_ref2){var setMessageList=_ref2.setMessageList;fetchGetChat().then(function(chatList){setUserList(chatList.userList);setMessageList(chatList.messageList);}).catch(function(err){setStatus(err.error);});};var usercontent=/*#__PURE__*/_jsx(ChatUserList,{userList:userList});var messagecontent=/*#__PURE__*/_jsx(ChatMessageList,{messageList:messageList});var outgoingcontent=/*#__PURE__*/_jsx(ChatOutgoing,{username:username,renderChat:renderChat,setMessageList:setMessageList});return/*#__PURE__*/_jsxs(\"div\",{class:\"display-panel\",children:[status&&/*#__PURE__*/_jsx(\"div\",{class:\"status\",children:status}),/*#__PURE__*/_jsxs(\"div\",{class:\"row\",children:[usercontent,messagecontent]}),outgoingcontent]});};export default ShowStuff;","map":{"version":3,"sources":["C:/Users/kusha/Desktop/student--bhattadm/work/react-chat/react-chat-server/src/ShowStuff.jsx"],"names":["useEffect","useState","fetchEndSession","fetchCheckSession","fetchGetChat","fetchSendMessage","ChatUserList","ChatMessageList","ChatOutgoing","ShowStuff","username","userList","setUserList","messageList","setMessageList","status","setStatus","renderChat","intervalId","setInterval","cleanup","clearInterval","then","chatList","catch","err","error","usercontent","messagecontent","outgoingcontent"],"mappings":"yRAAA,OAASA,SAAT,CAAoBC,QAApB,KAAoC,OAApC,CACA,OAASC,eAAT,CAA0BC,iBAA1B,CAA6CC,YAA7C,CAA0DC,gBAA1D,KAAkF,YAAlF,CACA,MAAOC,CAAAA,YAAP,KAAyB,gBAAzB,CACA,MAAOC,CAAAA,eAAP,KAA4B,mBAA5B,CACA,MAAOC,CAAAA,YAAP,KAAyB,gBAAzB,CAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,MAAkB,IAAfC,CAAAA,QAAe,MAAfA,QAAe,eAEFT,QAAQ,CAAC,EAAD,CAFN,wCAE3BU,QAF2B,eAEjBC,WAFiB,8BAGIX,QAAQ,CAAC,EAAD,CAHZ,yCAG3BY,WAH2B,eAGdC,cAHc,8BAINb,QAAQ,CAAC,EAAD,CAJF,yCAI3Bc,MAJ2B,eAInBC,SAJmB,eAMlChB,SAAS,CAAC,UAAM,CACdiB,UAAU,CAAC,CAACH,cAAc,CAAdA,cAAD,CAAD,CAAV,CACA,GAAMI,CAAAA,UAAU,CAAGC,WAAW,CAAC,UAAM,CACnCF,UAAU,CAAC,CAACH,cAAc,CAAdA,cAAD,CAAD,CAAV,CACD,CAF6B,CAE3B,IAF2B,CAA9B,CAGA,MAAO,SAASM,CAAAA,OAAT,EAAmB,CACxBC,aAAa,CAACH,UAAD,CAAb,CACD,CAFD,CAGD,CARQ,CAQP,EARO,CAAT,CAUA,GAAMD,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,OAAsB,IAApBH,CAAAA,cAAoB,OAApBA,cAAoB,CACvCV,YAAY,GACXkB,IADD,CACM,SAACC,QAAD,CAAY,CAChBX,WAAW,CAACW,QAAQ,CAACZ,QAAV,CAAX,CACAG,cAAc,CAACS,QAAQ,CAACV,WAAV,CAAd,CACD,CAJD,EAKCW,KALD,CAKO,SAACC,GAAD,CAAS,CACdT,SAAS,CAACS,GAAG,CAACC,KAAL,CAAT,CACH,CAPC,EAQH,CATC,CAWF,GAAMC,CAAAA,WAAW,cAAK,KAAC,YAAD,EAAc,QAAQ,CAAIhB,QAA1B,EAAtB,CACA,GAAMiB,CAAAA,cAAc,cAAG,KAAC,eAAD,EAAiB,WAAW,CAAIf,WAAhC,EAAvB,CACA,GAAMgB,CAAAA,eAAe,cAAG,KAAC,YAAD,EAAc,QAAQ,CAAInB,QAA1B,CAAoC,UAAU,CAAEO,UAAhD,CAA4D,cAAc,CAAEH,cAA5E,EAAxB,CAEE,mBACE,aAAK,KAAK,CAAG,eAAb,WACEC,MAAM,eAAI,YAAK,KAAK,CAAC,QAAX,UAAqBA,MAArB,EADZ,cAEA,aAAK,KAAK,CAAG,KAAb,WACCY,WADD,CAECC,cAFD,GAFA,CAMCC,eAND,GADF,CAUD,CAzCD,CA2CA,cAAepB,CAAAA,SAAf","sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { fetchEndSession, fetchCheckSession, fetchGetChat,fetchSendMessage } from './services';\r\nimport ChatUserList from './ChatUserList';\r\nimport ChatMessageList from './ChatMessageList';\r\nimport ChatOutgoing from './ChatOutgoing';\r\n\r\nconst ShowStuff = ({ username }) => {\r\n\r\n  const [userList, setUserList] = useState('');\r\n  const [messageList, setMessageList] = useState('');\r\n  const [status, setStatus] = useState('');\r\n\r\n  useEffect(() => {\r\n    renderChat({setMessageList});\r\n    const intervalId = setInterval(() => {\r\n      renderChat({setMessageList});\r\n    }, 5000);\r\n    return function cleanup() {\r\n      clearInterval(intervalId);\r\n    };\r\n  },[]);\r\n  \r\n  const renderChat = ({setMessageList}) => {\r\n    fetchGetChat()\r\n    .then((chatList)=>{\r\n      setUserList(chatList.userList)\r\n      setMessageList(chatList.messageList)\r\n    })\r\n    .catch((err) => {\r\n      setStatus(err.error);\r\n  });\r\n}\r\n\r\nconst usercontent   = <ChatUserList userList = {userList}/>;\r\nconst messagecontent = <ChatMessageList messageList = {messageList}/>;\r\nconst outgoingcontent = <ChatOutgoing username = {username} renderChat={renderChat} setMessageList={setMessageList}/>;\r\n\r\n  return (\r\n    <div class = \"display-panel\">\r\n    { status && <div class=\"status\">{status}</div>}\r\n    <div class = \"row\">\r\n    {usercontent}\r\n    {messagecontent}\r\n    </div>\r\n    {outgoingcontent}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ShowStuff;"]},"metadata":{},"sourceType":"module"}