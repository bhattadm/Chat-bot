{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\kusha\\\\Desktop\\\\student--bhattadm\\\\work\\\\react-chat\\\\react-chat-server\\\\src\\\\App.jsx\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { useState, useEffect } from 'react';\nimport { checkSession } from './services';\nimport Login from './Login';\n\nfunction App() {\n  _s();\n\n  const [userState, setUserState] = useState({\n    isLoggedIn: false,\n    isPending: true\n  });\n  useEffect(() => {\n    checkSession().then(userinfo => {\n      setUserState({\n        isLoggedIn: true,\n        isPending: false //username: userinfo.username,\n        // messageList: userinfo.messageList,\n\n      });\n    }).catch(() => {\n      // We treat any failure as not logged in\n      setUserState({\n        isLoggedIn: false,\n        isPending: false\n      });\n    });\n  }, []); // only run on initial render\n\n  const login = function ({\n    username,\n    userList,\n    messageList\n  }) {\n    setUserState({\n      isLoggedIn: true,\n      isPending: false,\n      username,\n      userList,\n      messageList\n    });\n  };\n\n  if (userState.isPending) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this);\n  }\n\n  let content;\n\n  if (userState.isLoggedIn) {// content = <ShowStuff stuff={userState.info}/>;\n  } else {\n    content = /*#__PURE__*/_jsxDEV(Login, {\n      onLogin: login\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 15\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: content\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"U3n6GXlmAfYbi02K52z3QRg+uDY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/kusha/Desktop/student--bhattadm/work/react-chat/react-chat-server/src/App.jsx"],"names":["useState","useEffect","checkSession","Login","App","userState","setUserState","isLoggedIn","isPending","then","userinfo","catch","login","username","userList","messageList","content"],"mappings":";;;;;AACA,OAAO,WAAP;AACA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,YAAT,QAA6B,YAA7B;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AACA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,SAAD,EAAWC,YAAX,IAA2BN,QAAQ,CAAC;AAAEO,IAAAA,UAAU,EAAE,KAAd;AAAqBC,IAAAA,SAAS,EAAE;AAAhC,GAAD,CAAzC;AACAP,EAAAA,SAAS,CAAE,MAAM;AACfC,IAAAA,YAAY,GACXO,IADD,CACOC,QAAQ,IAAI;AACjBJ,MAAAA,YAAY,CAAC;AACXC,QAAAA,UAAU,EAAE,IADD;AAEXC,QAAAA,SAAS,EAAE,KAFA,CAGX;AACA;;AAJW,OAAD,CAAZ;AAMD,KARD,EASCG,KATD,CASQ,MAAM;AACZ;AACAL,MAAAA,YAAY,CAAC;AACXC,QAAAA,UAAU,EAAE,KADD;AAEXC,QAAAA,SAAS,EAAE;AAFA,OAAD,CAAZ;AAID,KAfD;AAgBD,GAjBQ,EAiBN,EAjBM,CAAT,CAFa,CAmBL;;AAER,QAAMI,KAAK,GAAG,UAAS;AAACC,IAAAA,QAAD;AAAWC,IAAAA,QAAX;AAAoBC,IAAAA;AAApB,GAAT,EAA2C;AACvDT,IAAAA,YAAY,CAAC;AACXC,MAAAA,UAAU,EAAE,IADD;AAEXC,MAAAA,SAAS,EAAE,KAFA;AAGXK,MAAAA,QAHW;AAIXC,MAAAA,QAJW;AAKXC,MAAAA;AALW,KAAD,CAAZ;AAOD,GARD;;AAUA,MAAGV,SAAS,CAACG,SAAb,EAAwB;AACtB,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAED,MAAIQ,OAAJ;;AACA,MAAGX,SAAS,CAACE,UAAb,EAAyB,CACvB;AACD,GAFD,MAEO;AACLS,IAAAA,OAAO,gBAAG,QAAC,KAAD;AAAO,MAAA,OAAO,EAAEJ;AAAhB;AAAA;AAAA;AAAA;AAAA,YAAV;AACD;;AACD,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,cACEI;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GAlDQZ,G;;KAAAA,G;AAoDT,eAAeA,GAAf","sourcesContent":["\nimport './App.css';\nimport { useState, useEffect } from 'react';\nimport { checkSession } from './services';\nimport Login from './Login';\nfunction App() {\n  const [userState,setUserState] = useState({ isLoggedIn: false, isPending: true });\n  useEffect( () => {\n    checkSession()\n    .then( userinfo => {\n      setUserState({\n        isLoggedIn: true,\n        isPending: false,\n        //username: userinfo.username,\n        // messageList: userinfo.messageList,\n      });\n    })\n    .catch( () => {\n      // We treat any failure as not logged in\n      setUserState({\n        isLoggedIn: false,\n        isPending: false,\n      });\n    });\n  }, []); // only run on initial render\n\n  const login = function({username, userList,messageList}) {\n    setUserState({\n      isLoggedIn: true,\n      isPending: false,\n      username,\n      userList,\n      messageList\n    });\n  };\n\n  if(userState.isPending) {\n    return (\n      <div className=\"app\">\n        Loading...\n      </div>\n    );\n  }\n\n  let content;\n  if(userState.isLoggedIn) {\n    // content = <ShowStuff stuff={userState.info}/>;\n  } else {\n    content = <Login onLogin={login}/>;\n  }\n  return (\n    <div className=\"app\">\n     {content}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}