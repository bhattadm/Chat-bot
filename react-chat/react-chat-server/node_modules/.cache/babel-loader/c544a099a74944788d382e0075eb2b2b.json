{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\kusha\\\\desktop\\\\student--bhattadm\\\\work\\\\react-chat\\\\react-chat-server\\\\src\\\\ShowStuff.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { endSession, checkSession, fetchGetChat } from './services';\nimport ChatUserList from './ChatUserList';\nimport ChatMessageList from './ChatMessageList';\nimport ChatOutgoing from './ChatOutgoing';\n\nconst ShowStuff = ({\n  stuff\n}) => {\n  _s();\n\n  // const [userState, setUserState] = useState({ isPending: true });\n  const [chatState, setChatState] = useState('');\n  const [userList, setUserList] = useState('');\n  const [msgList, setmsgList] = useState('');\n  useEffect(() => {\n    fetchGetChat().then(chat => {\n      setchatState({\n        // isPending: false,\n        userList: chat.userList,\n        messageList: chat.messageList\n      });\n    }).catch(() => {\n      // We treat any failure as not logged in\n      setUserList('');\n      setmsgList('');\n    });\n  }, []); // only run on initial render\n\n  const sendmessage = function ({\n    userList,\n    messageList\n  }) {\n    setChatState({\n      userList,\n      messageList\n    });\n  };\n\n  const usercontent = /*#__PURE__*/_jsxDEV(ChatUserList, {\n    userList: chatState.userList\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 23\n  }, this);\n\n  const messagecontent = /*#__PURE__*/_jsxDEV(ChatMessageList, {\n    messageList: chatState.messageList\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 24\n  }, this);\n\n  const outgoingcontent = /*#__PURE__*/_jsxDEV(ChatOutgoing, {\n    username: stuff.username,\n    onSend: sendmessage\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 25\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"display-panel\",\n    children: [usercontent, messagecontent, outgoingcontent]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ShowStuff, \"hZDGybsraxdyU2ARWs1nhlkWkm8=\");\n\n_c = ShowStuff;\nexport default ShowStuff;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShowStuff\");","map":{"version":3,"sources":["C:/Users/kusha/desktop/student--bhattadm/work/react-chat/react-chat-server/src/ShowStuff.jsx"],"names":["useState","useEffect","endSession","checkSession","fetchGetChat","ChatUserList","ChatMessageList","ChatOutgoing","ShowStuff","stuff","chatState","setChatState","userList","setUserList","msgList","setmsgList","then","chat","setchatState","messageList","catch","sendmessage","usercontent","messagecontent","outgoingcontent","username"],"mappings":";;;;;AAAA,SAASA,QAAT,EAAkBC,SAAlB,QAAmC,OAAnC;AACA,SAASC,UAAT,EAAqBC,YAArB,EAAmCC,YAAnC,QAAuD,YAAvD;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAAA;;AAC/B;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACY,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACc,OAAD,EAAUC,UAAV,IAAwBf,QAAQ,CAAC,EAAD,CAAtC;AACAC,EAAAA,SAAS,CAAE,MAAM;AACfG,IAAAA,YAAY,GACXY,IADD,CACOC,IAAI,IAAI;AACbC,MAAAA,YAAY,CAAC;AACX;AACAN,QAAAA,QAAQ,EAAEK,IAAI,CAACL,QAFJ;AAGXO,QAAAA,WAAW,EAAEF,IAAI,CAACE;AAHP,OAAD,CAAZ;AAKD,KAPD,EAQCC,KARD,CAQQ,MAAM;AACZ;AACDP,MAAAA,WAAW,CAAC,EAAD,CAAX;AACAE,MAAAA,UAAU,CAAC,EAAD,CAAV;AACA,KAZD;AAaD,GAdQ,EAcN,EAdM,CAAT,CAL+B,CAmBvB;;AAER,QAAMM,WAAW,GAAG,UAAS;AAACT,IAAAA,QAAD;AAAUO,IAAAA;AAAV,GAAT,EAAiC;AACnDR,IAAAA,YAAY,CAAC;AACXC,MAAAA,QADW;AAEXO,MAAAA;AAFW,KAAD,CAAZ;AAKD,GAND;;AAOF,QAAMG,WAAW,gBAAK,QAAC,YAAD;AAAc,IAAA,QAAQ,EAAIZ,SAAS,CAACE;AAApC;AAAA;AAAA;AAAA;AAAA,UAAtB;;AACA,QAAMW,cAAc,gBAAG,QAAC,eAAD;AAAiB,IAAA,WAAW,EAAIb,SAAS,CAACS;AAA1C;AAAA;AAAA;AAAA;AAAA,UAAvB;;AACA,QAAMK,eAAe,gBAAG,QAAC,YAAD;AAAc,IAAA,QAAQ,EAAIf,KAAK,CAACgB,QAAhC;AAA0C,IAAA,MAAM,EAAIJ;AAApD;AAAA;AAAA;AAAA;AAAA,UAAxB;;AACE,sBACE;AAAK,IAAA,KAAK,EAAG,eAAb;AAAA,eACGC,WADH,EAEGC,cAFH,EAGGC,eAHH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAtCD;;GAAMhB,S;;KAAAA,S;AAuCN,eAAeA,SAAf","sourcesContent":["import { useState,useEffect } from 'react';\r\nimport { endSession, checkSession, fetchGetChat } from './services';\r\nimport ChatUserList from './ChatUserList';\r\nimport ChatMessageList from './ChatMessageList';\r\nimport ChatOutgoing from './ChatOutgoing';\r\n\r\nconst ShowStuff = ({ stuff }) => {\r\n  // const [userState, setUserState] = useState({ isPending: true });\r\n  const [chatState, setChatState] = useState('');\r\n  const [userList, setUserList] = useState('');\r\n  const [msgList, setmsgList] = useState('');\r\n  useEffect( () => {\r\n    fetchGetChat()\r\n    .then( chat => {\r\n      setchatState({\r\n        // isPending: false,\r\n        userList: chat.userList,\r\n        messageList: chat.messageList,\r\n      });\r\n    })\r\n    .catch( () => {\r\n      // We treat any failure as not logged in\r\n     setUserList('');\r\n     setmsgList('');\r\n    });\r\n  }, []); // only run on initial render\r\n\r\n  const sendmessage = function({userList,messageList}) {\r\n    setChatState({\r\n      userList,\r\n      messageList\r\n    });\r\n    \r\n  };\r\nconst usercontent   = <ChatUserList userList = {chatState.userList}/>;\r\nconst messagecontent = <ChatMessageList messageList = {chatState.messageList}/>;\r\nconst outgoingcontent = <ChatOutgoing username = {stuff.username} onSend = {sendmessage}/>;\r\n  return (\r\n    <div class = \"display-panel\">\r\n      {usercontent}\r\n      {messagecontent}\r\n      {outgoingcontent}\r\n    </div>\r\n  );\r\n};\r\nexport default ShowStuff;\r\n"]},"metadata":{},"sourceType":"module"}