{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\kusha\\\\desktop\\\\student--bhattadm\\\\work\\\\react-chat\\\\react-chat-server\\\\src\\\\App.jsx\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { useState, useEffect } from 'react';\nimport { endSession, checkSession } from './services';\nimport Nav from './Nav';\nimport Login from './Login';\nimport ShowStuff from './ShowStuff';\n\nfunction App() {\n  _s();\n\n  const [userState, setUserState] = useState({\n    isLoggedIn: false,\n    isPending: true\n  });\n  const [chatState, setChatState] = useState('');\n  useEffect(() => {\n    checkSession().then(userinfo => {\n      setUserState({\n        isLoggedIn: true,\n        isPending: false // username: userinfo.username,\n        // userList:userinfo.userList,\n        // messageList: userinfo.messageList,\n\n      });\n      setChatState({\n        username: userinfo.username,\n        userList: userinfo.userList,\n        messageList: userinfo.messageList\n      });\n    }).catch(() => {\n      // We treat any failure as not logged in\n      setUserState({\n        isLoggedIn: false,\n        isPending: false\n      });\n    });\n  }, []); // only run on initial render\n\n  const login = function ({\n    username,\n    userList,\n    messageList\n  }) {\n    setUserState({\n      isLoggedIn: true,\n      isPending: false // username,\n      // userList,\n      // messageList,\n\n    });\n    setChatState({\n      username,\n      userList,\n      messageList\n    });\n  };\n\n  if (userState.isPending) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this);\n  }\n\n  const logout = function () {\n    // Inform UI to wait\n    setUserState({ ...userState,\n      isPending: true\n    }); // Begin logout\n\n    endSession().then(() => {\n      setUserState({\n        isLoggedIn: false,\n        isPending: false\n      });\n    }).catch(() => {\n      // TODO: notify user of issue\n      setUserState({ ...userState,\n        isPending: false\n      });\n    });\n  };\n\n  let content;\n\n  if (userState.isLoggedIn) {\n    content = /*#__PURE__*/_jsxDEV(ShowStuff, {\n      stuff: chatState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 15\n    }, this);\n  } else {\n    content = /*#__PURE__*/_jsxDEV(Login, {\n      onLogin: login\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 15\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(Nav, {\n      user: userState,\n      onLogout: logout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }, this), content]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"IO68iE3TEpg+rpF5Ss7XVNJmJik=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/kusha/desktop/student--bhattadm/work/react-chat/react-chat-server/src/App.jsx"],"names":["useState","useEffect","endSession","checkSession","Nav","Login","ShowStuff","App","userState","setUserState","isLoggedIn","isPending","chatState","setChatState","then","userinfo","username","userList","messageList","catch","login","logout","content"],"mappings":"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","sourcesContent":["\nimport './App.css';\nimport { useState, useEffect } from 'react';\nimport { endSession, checkSession } from './services';\nimport Nav from './Nav';\nimport Login from './Login';\nimport ShowStuff from './ShowStuff';\n\nfunction App() {\n  const [userState,setUserState] = useState({ isLoggedIn: false, isPending: true });\n  const [chatState,setChatState] = useState('');\n  useEffect( () => {\n    checkSession()\n    .then( userinfo => {\n      setUserState({\n        isLoggedIn: true,\n        isPending: false,\n        // username: userinfo.username,\n        // userList:userinfo.userList,\n        // messageList: userinfo.messageList,\n      });\n      setChatState({\n        username: userinfo.username,\n        userList:userinfo.userList,\n        messageList: userinfo.messageList,\n      });\n    })\n    .catch( () => {\n      // We treat any failure as not logged in\n      setUserState({\n        isLoggedIn: false,\n        isPending: false,\n      });\n    });\n  }, []); // only run on initial render\n\n  const login = function({username,userList,messageList}) {\n    setUserState({\n      isLoggedIn: true,\n      isPending: false,\n      // username,\n      // userList,\n      // messageList,\n    });\n    setChatState({   \n      username,\n      userList,\n      messageList,\n    });\n  };\n\n  if(userState.isPending) {\n    return (\n      <div className=\"app\">\n        Loading...\n      </div>\n    );\n  }\n  const logout = function() {\n    // Inform UI to wait\n    setUserState({\n      ...userState,\n      isPending: true,\n    });\n    // Begin logout\n    endSession()\n    .then( () => {\n      setUserState({\n        isLoggedIn: false,\n        isPending: false,\n      });\n    })\n    .catch( () => {\n      // TODO: notify user of issue\n      setUserState({\n        ...userState,\n        isPending: false,\n      });\n    });\n  };\n  let content;\n  if(userState.isLoggedIn) {\n    content = <ShowStuff stuff={chatState}/>;\n  } else {\n    content = <Login onLogin={login}/>;\n  }\n  return (\n    <div className=\"app\">\n    <Nav user={userState} onLogout={logout}/>\n     {content}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}